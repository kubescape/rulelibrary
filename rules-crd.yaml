apiVersion: kubescape.io/v1
kind: Rules
metadata:
  name: kubescape-rules
  namespace: kubescape
  labels:
    app: kubescape
spec:
  rules:
    - name: "Unexpected process launched"
      enabled: true
      id: "R0001"
      description: "Detects unexpected process launches that are not in the baseline"
      expressions:
        message: "'Unexpected process launched: ' + data.event.Comm + ' with PID ' + string(data.event.Pid)"
        unique_id: "data.event.Comm + '_' + string(data.event.Pid) + '_' + data.event.ExePath"
        rule_expression:
          - event_type: "exec"
            expression: "!ap.was_executed(data.event.Event.CommonData.Runtime.ContainerID, data.event.ExePath)"
      profile_dependency: 0
      severity: 1
      support_policy: false
      tags:
        - "anomaly"
        - "process"
        - "exec" 
    - name: "Unexpected file access"
      enabled: true
      id: "R0002"
      description: "Detects unexpected file access that is not in the baseline"
      expressions:
        message: "'Unexpected file access detected: ' + data.event.Comm + ' with PID ' + string(data.event.Pid) + ' to ' + data.event.FullPath"
        unique_id: "data.event.Comm + '_' + data.event.FullPath"
        rule_expression:
          - event_type: "open"
            expression: "!ap.was_path_opened(data.event.Event.CommonData.Runtime.ContainerID, data.event.FullPath)"
      profile_dependency: 0
      severity: 1
      support_policy: false
      tags:
        - "anomaly"
        - "file"
        - "open" 
    - name: "Unexpected system call"
      enabled: true
      id: "R0003"
      description: "Detects unexpected system calls that are not whitelisted by application profile"
      expressions:
        message: "'Unexpected system call detected: ' + data.event.SyscallName + ' with PID ' + string(data.event.Pid)"
        unique_id: "data.event.SyscallName"
        rule_expression:
          - event_type: "syscall"
            expression: "!ap.was_syscall_used(data.event.Event.CommonData.Runtime.ContainerID, data.event.SyscallName)"
      profile_dependency: 0
      severity: 1
      support_policy: false
      tags:
        - "anomaly"
        - "syscall"
    - name: "Unexpected capability used"
      enabled: true
      id: "R0004"
      description: "Detects unexpected capabilities that are not whitelisted by application profile"
      expressions:
        message: "'Unexpected capability used: ' + data.event.CapName + ' in syscall ' + data.event.Syscall + ' with PID ' + string(data.event.Pid)"
        unique_id: "data.event.Comm + '_' + data.event.CapName"
        rule_expression:
          - event_type: "capabilities"
            expression: "!ap.was_capability_used(data.event.Event.CommonData.Runtime.ContainerID, data.event.CapName)"
      profile_dependency: 0
      severity: 1
      support_policy: false
      tags:
        - "anomaly"
        - "capabilities"
    - name: "Unexpected domain request"
      enabled: true
      id: "R0005"
      description: "Detecting unexpected domain requests that are not whitelisted by application profile."
      expressions:
        message: "'Unexpected domain communication: ' + data.event.DNSName + ' from: ' + data.event.Event.CommonData.K8s.BasicK8sMetadata.ContainerName"
        unique_id: "data.event.Comm + '_' + data.event.DNSName"
        rule_expression:
          - event_type: "dns"
            expression: "!nn.is_domain_in_egress(data.event.Event.CommonData.Runtime.ContainerID, data.event.DNSName) && !data.event.DNSName.endsWith('.svc.cluster.local.')"
      profile_dependency: 0
      severity: 1
      support_policy: false
      tags:
        - "dns"
        - "anomaly"
    - name: "Kubernetes Client Executed"
      enabled: true
      id: "R0007"
      description: "Detecting execution of kubernetes client"
      expressions:
        message: "'Kubernetes client ' + data.event.Comm + ' was executed with PID ' + string(data.event.Pid)"
        unique_id: "data.event.Comm + '_' + data.event.Pcomm"
        rule_expression:
          - event_type: "exec"
            expression: "(data.event.Comm == 'kubectl' || data.event.ExePath.endsWith('/kubectl')) && !ap.was_executed(data.event.Event.CommonData.Runtime.ContainerID, data.event.ExePath)"
          - event_type: "network"
            expression: "k8s.is_api_server_address(data.event.DstEndpoint.Addr) && !nn.was_address_in_egress(data.event.Event.CommonData.Runtime.ContainerID, data.event.DstEndpoint.Addr)"
      profile_dependency: 0
      severity: 8 # High
      support_policy: false
      tags:
        - "exec"
        - "network"
        - "anomaly"
    - name: "eBPF Program Load"
      enabled: true
      id: "R0009"
      description: "Detecting eBPF program load."
      expressions:
        message: "'bpf system call executed in ' + data.event.Event.CommonData.K8s.BasicK8sMetadata.ContainerName"
        unique_id: "data.event.Comm + '_' + data.event.SyscallName"
        rule_expression:
          - event_type: "syscall"
            expression: "data.event.SyscallName == 'bpf' && !ap.was_syscall_used(data.event.Event.CommonData.Runtime.ContainerID, data.event.SyscallName)"
      profile_dependency: 1
      severity: 5
      support_policy: false
      tags:
        - "syscall"
        - "ebpf" 
    - name: "Unexpected Sensitive File Access"
      enabled: true
      id: "R0010"
      description: "Detecting access to sensitive files."
      expressions:
        message: "'Unexpected sensitive file access: ' + data.event.FullPath + ' by process ' + data.event.Comm"
        unique_id: "data.event.Comm + '_' + data.event.FullPath"
        rule_expression:
          - event_type: "open"
            expression: "data.event.FullPath.startsWith('/etc/shadow') && !ap.was_path_opened(data.event.Event.CommonData.Runtime.ContainerID, data.event.FullPath)"
      profile_dependency: 1
      severity: 5
      support_policy: false
      tags:
        - "files"
        - "anomaly"
    - name: "Symlink Created Over Sensitive File"
      enabled: true
      id: "R1010"
      description: "Detects symlink creation over sensitive files"
      expressions:
        message: "'Symlink created over sensitive file: ' + data.event.OldPath + ' -> ' + data.event.NewPath"
        unique_id: "data.event.Comm + '_' + data.event.OldPath"
        rule_expression:
          - event_type: "symlink"
            expression: "(data.event.OldPath.startsWith('/etc/shadow') || data.event.OldPath.startsWith('/etc/sudoers')) && !ap.was_path_opened(data.event.Event.CommonData.Runtime.ContainerID, data.event.OldPath)"
      profile_dependency: 0
      severity: 5
      support_policy: true
      tags:
        - "anomaly"
        - "symlink" 
