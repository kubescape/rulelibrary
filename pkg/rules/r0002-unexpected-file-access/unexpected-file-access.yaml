apiVersion: kubescape.io/v1
kind: Rules
metadata:
  name: unexpected-file-access-rule
  namespace: kubescape
  labels:
    app: kubescape
spec:
  rules:
  - name: "Files Access Anomalies in container"
    enabled: false
    id: "R0002"
    description: "Detects unexpected file access that is not in the baseline"
    expressions:
      message: "'Unexpected file access detected: ' + open.comm + ' with PID ' + string(open.pid) + ' to ' + open.full_path"
      unique_id: "open.comm + '_' + open.full_path"
      rule_expression:
        - event_type: "open"
          expression: >
            (open.full_path.startsWith('/etc/') ||
            open.full_path.startsWith('/var/log/') ||
            open.full_path.startsWith('/var/run/') ||
            open.full_path.startsWith('/run/') ||
            open.full_path.startsWith('/var/spool/cron/') ||
            open.full_path.startsWith('/var/www/') ||
            open.full_path.startsWith('/var/lib/') ||
            open.full_path.startsWith('/opt/') ||
            open.full_path.startsWith('/usr/local/') ||
            open.full_path.startsWith('/app/') ||
            open.full_path == '/.dockerenv' ||
            open.full_path == '/proc/self/environ')
            &&
            !(open.full_path.startsWith('/run/secrets/kubernetes.io/serviceaccount') ||
              open.full_path.startsWith('/var/run/secrets/kubernetes.io/serviceaccount') ||
              open.full_path.startsWith('/tmp'))
            &&
            !ap.was_path_opened(open.runtime.container_id, open.full_path)
    profile_dependency: 0
    severity: 1
    support_policy: false
    tags:
      - "anomaly"
      - "file"
      - "open"
      - "applicationprofile"
